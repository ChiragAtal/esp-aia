{"version":3,"sources":["assets/Espressiflogo.svg","Form/Form.js","App.js","index.js"],"names":["module","exports","URL","process","Form","useState","error","setError","success","setSuccess","recaptcha","setRecaptcha","emailEl","useRef","gdprEl","onSubmit","event","preventDefault","emailid","current","value","gdpr","checked","RegExp","test","fetch","method","body","JSON","stringify","email","cloud","then","resp","json","data","status","description","catch","console","log","className","htmlFor","type","id","aria-describedby","ref","sitekey","render","onloadCallback","verifyCallback","response","href","target","rel","role","App","src","logo","alt","ReactDOM","document","getElementById"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,2C,+KCGrCC,EAAMC,0EA4GGC,EA1GF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEeF,mBAAS,IAFxB,mBAERG,EAFQ,KAECC,EAFD,OAGmBJ,oBAAS,GAH5B,mBAGRK,EAHQ,KAGGC,EAHH,KAITC,EAAUC,iBAAO,MACjBC,EAASD,iBAAO,MAqDtB,OACI,0BAAME,SApDe,SAACC,GACtBA,EAAMC,iBACN,IAAIC,EAAUN,EAAQO,QAAQC,MAC1BC,EAAOP,EAAOK,QAAQG,SAGmD,IAAzE,IAAIC,OAAO,4CAA4CC,KAAKN,GAGpDG,GAGa,IAAdX,GAIPH,EAAS,IAGRD,IACDmB,MAAMvB,EAAK,CACPwB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBC,MAAOZ,EACPa,MAAO,UAGVC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GACkB,YAAhBA,EAAKC,OACL7B,EAAS4B,EAAKE,aACS,YAAhBF,EAAKC,QACZ3B,EAAW0B,EAAKE,gBAGvBC,OAAM,SAAAhC,GAAK,OAAIC,EAASD,MAE7BM,EAAQO,QAAQC,MAAQ,GACxBN,EAAOK,QAAQG,SAAU,EACzBX,GAAa,KA1BbJ,EAAS,4NAHTA,EAAS,+BAHTA,EAAS,iCA8CRgC,QAAQC,IAAItC,GACZqC,QAAQC,IAAIrC,4CACb,yBAAKsC,UAAU,cACX,2BAAOC,QAAQ,SAAf,iBACA,2BACIC,KAAK,QACLF,UAAU,eACVG,GAAG,QACHC,mBAAiB,YACjBC,IAAKlC,KAEb,yBAAK6B,UAAU,cACX,kBAAC,IAAD,CACAM,QAAS5C,2CACT6C,OAAO,WACPC,eAzBG,aA0BHC,eAtBS,SAAUC,GAChBxC,IAAXwC,OAwBI,yBAAKV,UAAU,yBACX,2BACIE,KAAK,WACLF,UAAU,mBACVG,GAAG,OACHxB,OAAO,EACP0B,IAAKhC,IACT,2BAAO2B,UAAU,mBAAmBC,QAAQ,QACxC,2BAAOD,UAAU,wBAAjB,uGAEA,uBAAGW,KAAK,4DAA4DC,OAAO,SAASC,IAAI,sBAAsBb,UAAU,QAAxH,WAOJnC,GAAS,yBAAKmC,UAAU,qBAAqBc,KAAK,SAASjD,GAG3DE,GAAW,yBAAKiC,UAAU,sBAAsBc,KAAK,SAAS/C,GAElE,4BAAQmC,KAAK,SAASF,UAAU,kBAAhC,cCzEGe,EA5BH,WACV,OACE,yBAAKf,UAAU,aACb,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACf,yBAAKgB,IAAKC,IAAMjB,UAAU,OAAOkB,IAAI,cACrC,wBAAIlB,UAAU,QAAO,8CAGrB,yBAAKG,GAAG,SACN,oKACE,uBAAGQ,KAAK,0CAA0CC,OAAO,SAASC,IAAI,sBAAsBb,UAAU,QACpG,uCAFJ,KAKA,yHACA,wBAAIA,UAAU,UAGhB,kBAAC,EAAD,UCrBZmB,IAASZ,OAAO,kBAAC,EAAD,MAASa,SAASC,eAAe,W","file":"static/js/main.47864c17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Espressiflogo.84f501e3.svg\";","import React, { useRef, useState } from 'react';\nimport Recaptcha from 'react-recaptcha';\n\nconst URL = process.env.REACT_APP_API;\n\nconst Form = () => {\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [recaptcha, setRecaptcha] = useState(true)\n    const emailEl = useRef(null)\n    const gdprEl = useRef(null)\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        let emailid = emailEl.current.value;\n        let gdpr = gdprEl.current.checked;\n\n        // Validations\n        if (new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(emailid) === false) {\n            setError(\"Please enter a valid email.\");\n            return;\n        } else if (!gdpr) {\n            setError(\"Please complete the captcha\");\n            return;\n        } else if (recaptcha === false) {\n            setError(\"We need your consent to store your email ID and associate it with the device certificates that we have created for you. Note that we do not store the actual certificates and they cannot be recovered if you lose them.\");\n            return;\n        } else {\n            setError(\"\")\n        }\n\n        if (!error) {\n            fetch(URL, {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: emailid,\n                    cloud: \"aws\"\n                }),\n            })\n                .then(resp => resp.json())\n                .then(data => {\n                    if (data.status === \"failure\") {\n                        setError(data.description)\n                    } else if (data.status === \"success\") {\n                        setSuccess(data.description)\n                    }\n                })\n                .catch(error => setError(error))\n            \n            emailEl.current.value = \"\"\n            gdprEl.current.checked = false\n            setRecaptcha(false)\n        }\n    }\n    \n    var callback = () => {\n        return\n    }\n\n    var verifyCallback = function (response) {\n        response ? setRecaptcha(true) : setRecaptcha(false)\n    };\n\n    return ( \n        <form onSubmit={handleFormSubmit}>\n            {console.log(URL)}\n            {console.log(process.env.REACT_APP_CAPTCHA_KEY)}\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    aria-describedby=\"emailHelp\"\n                    ref={emailEl}/>\n            </div>\n            <div className=\"form-group\">\n                <Recaptcha\n                sitekey={process.env.REACT_APP_CAPTCHA_KEY}\n                render=\"explicit\"\n                onloadCallback={callback}\n                verifyCallback={verifyCallback}\n            />\n            </div>\n            <div className=\"form-group form-check\">\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"gdpr\"\n                    value={true}\n                    ref={gdprEl}/>\n                <label className=\"form-check-label\" htmlFor=\"gdpr\">\n                    <small className=\"form-text text-muted\">\n                    Please check here to provide consent to store your email address. Please read our privacy policy&nbsp;\n                    <a href=\"https://espressif.github.io/esp-jumpstart/privacy-policy/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\n                        here\n                    </a>\n                    </small>\n                </label>\n            </div>\n            {\n                error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>\n            }\n            {\n                success && <div className=\"alert alert-success\" role=\"alert\">{success}</div>\n            }\n            <button type=\"submit\" className=\"btn btn-custom\">Generate</button>\n        </form>\n     );\n}\n \nexport default Form;","import React from 'react';\nimport './App.css';\nimport logo from './assets/Espressiflogo.svg'\nimport Form from './Form/Form';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <div className=\"logo-container text-center\">\n            <img src={logo} className=\"logo\" alt=\"Espressif\" />\n            <h2 className=\"my-3\"><b>Espressif AIA</b></h2>\n            </div>\n          \n            <div id=\"intro\">\n              <p>This form allows you to quickly create AWS IoT certificates for your device to securely communicate with the AIA server as part of&nbsp;\n                <a href=\"https://github.com/espressif/esp-va-sdk\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\n                  <b>ESP AIA</b>\n                </a>.\n              </p>\n              <p>After you fill out this form, an email will be sent to you with the required certificates.</p>                            \n              <hr className=\"my-3\" />\n            </div>\n\n            <Form/>\n            \n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}